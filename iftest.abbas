// ABBAS LANGUAGE INTERPRETOR TEST FILE

// OPERATION PARSING TEST
NUM nathan = -2;
NUM francois = 6.3;
NUM efe1 = 0;
BOOL a = 0;
NUM res = nathan + (-1 + francois) / (efe1+1);
//DEL(res);
PRINT(res);

// NOT OPERATOR TEST
IF(!a)
{
    PRINT(a);
}

// FUNCTION DECLERATION TEST

DEF expF{           // this function computes the taylor series for the exponential function exp(x)

    NUM i = 1;      // incrementer of taylor series, first term (n = 0) already counted in
    NUM exp = 1;    // first term (n = 0) in taylor series, n starts from 1
    NUM x = 5;      // x value in exp(x) 
    NUM fact = 1;   // factorial variable starts at one and multiplied at each incrementation
    NUM s = 1;      // x to the power of n

    WHILE(i < 100){
        s = s * x;
        fact = fact * i;
        exp = exp + s / fact;
        i = i + 1;
    }

    PRINT(exp);
}

expF();

PRINT(exp);


// FOR(name=1 ; 2 ; i=i+1)
//{ }




